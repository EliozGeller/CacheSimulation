[General]
network = Network
cmdenv-status-frequency = 600s
# 10.5s,10.2s,10.1s,10.01s,10.001s,10.0001s,10.005s,10.05s,10.0005s,10.008s,10.03s,10.003s,10.006s,10.002s,10.0002s
sim-time-limit = ${endSim = 3.006s} #limit of simulation time 


#0.052 s

#Parameters:
Network.rack[*].number_of_hosts = ${hosts = 50000}
Network.size_distribution = "size_distribution/${SizeDist = i-hadoop}.csv"
Network.scale = ${scale = 1}


#"${C = 50 , 100 , 150 , 200 , 300 , 500 , 800, 1000}"
Network.cache_size = "${cache =  50 , 150 , 300 , 500 , 800, 1000}"


#${th = 37323, 44195, 51067, 62987.5, 74908, 90228.8, 117556, 173830., 293768., 223092956}"
Network.push_threshold_in_aggregation = "${th = 37323, 44195, 51067, 62987.5, 74908, 90228.8, 117556, 173830., 293768., 223092956}"
Network.push_threshold_in_controller_switch = "${th}"




Network.total_rate_in_tor = "${rate = 1600000000000}" #1.6 Tbps

#Network.output_file = "${S = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/}"
Network.output_file = "${S = my_results/new results/end time = ${endSim} rate = 2.5G size distribution = ${SizeDist} cache size = ${cache} push threasholds = ${th}/}"
#Network.output_file = "${S = my_results/ccc/websearch scale = ${scale} cache = ${cache} th = ${th} hosts = ${hosts}/}"
#IMPORTANT!!!
#From a certain length of the string of S the text files are not written correctly, check before!!!!! Do not exceed a string length of 148

Network.run_elephant = false
Network.bandwidth_elephant_threshold = ""

Network.run_push = true


Network.record_traffic = false
Network.create_offline_traffic = false



output-scalar-file = "${S}scalar-file.sca"
output-vector-file = "${S}vector-file.vec"

#result-dir = my_results/ddd/aaa/
#output-scalar-file = "my_results/ddd/aaa${N}.sca"
#Network.output_file = "${resultdir}"




debug-on-errors = true
**.vector-recording =true

Network.NumOfToRs = 5
Network.NumOfAggregation = 3

#result-dir = my_results/ccc/




Network.linedelay = 0.2


Network.tor[*].CacheSize = 0
Network.agg[*].CacheSize = 0
Network.controllerswitch.CacheSize = 0


Network.tor[*].threshold = 2
Network.agg[*].threshold = 2
Network.controllerswitch.threshold = 1



Network.tor[*].Type = 1001
Network.agg[*].Type = 1002
Network.controllerswitch.Type = 1003





Network.rack[*].host[*].flow_appearance = ""
Network.rack[*].host[*].flow_size = ""
Network.policy_size = ""
#Network.cache_size = ""
Network.propagation_time = ""
Network.processing_time_on_data_packet_in_sw = ""
Network.processing_time_on_data_packet_in_controller = ""
Network.insertion_delay = ""
Network.eviction_delay = ""
Network.elephant_table_size = ""
Network.flush_elephant_time = ""
Network.check_for_elephant_time = ""
Network.elephant_sample_rx = ""

Network.already_requested_threshold = ""
#Network.push_threshold_in_aggregation = ""
#Network.push_threshold_in_controller_switch = ""
Network.cache_percentage = ""
Network.eviction_sample_size = ""
Network.inter_arrival_time_between_packets = ""
Network.inter_arrival_time_between_flowlets = ""
Network.inter_arrival_time_between_flows = ""
Network.large_flow = ""
Network.last_flow_appearance = "0"
Network.rack[*].last_flow_appearance = "0"




